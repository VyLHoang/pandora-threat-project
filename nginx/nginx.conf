# ========================================================================
# Pandora Threat Project - Nginx Reverse Proxy (CỔNG VÀO DUY NHẤT)
# ========================================================================
# Kiến trúc: Nginx là service DUY NHẤT tiếp xúc Internet
# Tất cả services Python chạy localhost, không xử lý SSL
# ========================================================================

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    # ====================================================================
    # Basic Configuration
    # ====================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss;
    
    # ====================================================================
    # Logging
    # ====================================================================
    log_format pandora '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time';
    
    access_log /var/log/nginx/pandora_access.log pandora;
    error_log /var/log/nginx/pandora_error.log warn;
    
    # ====================================================================
    # Rate Limiting (DDoS Protection)
    # ====================================================================
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    
    # ====================================================================
    # SERVER 1: HTTP (Port 80) - REDIRECT TO HTTPS
    # ====================================================================
    # Nginx xử lý redirect này, port_80.py KHÔNG CẦN THIẾT
    # ====================================================================
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Health check (không redirect)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect tất cả sang HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # ====================================================================
    # SERVER 2: HTTPS (Port 443) - MAIN ENTRY POINT
    # ====================================================================
    # Nginx xử lý SSL, tất cả services nội bộ dùng HTTP
    # ====================================================================
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;
        
        # ================================================================
        # SSL/TLS Configuration
        # ================================================================
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        
        # ================================================================
        # Security Headers
        # ================================================================
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # ================================================================
        # ROUTE 1: Admin Dashboard (Central Monitor)
        # ================================================================
        # URL: https://domain.com/admin-dashboard/
        # Backend: Flask (central-monitor) port 5000
        # ================================================================
        location /admin-dashboard/ {
            # Chỉ cho phép localhost (bảo mật)
            allow 127.0.0.1;
            deny all;
            
            # Proxy tới Flask
            proxy_pass http://127.0.0.1:5000/;
            proxy_http_version 1.1;
            
            # Headers quan trọng
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Cookies và session
            proxy_set_header Cookie $http_cookie;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # ================================================================
        # ROUTE 2: Admin API (Backend Admin)
        # ================================================================
        # URL: https://domain.com/api/admin/*
        # Backend: FastAPI (backend-admin) port 8002
        # ================================================================
        location /api/admin/ {
            limit_req zone=api burst=20 nodelay;
            
            # Chỉ cho phép localhost (bảo mật)
            allow 127.0.0.1;
            deny all;
            
            # Proxy tới FastAPI Admin
            proxy_pass http://127.0.0.1:8002/;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header Cookie $http_cookie;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # ================================================================
        # ROUTE 3: User API (Backend User)
        # ================================================================
        # URL: https://domain.com/api/user/*
        # Backend: FastAPI (backend-user) port 8001
        # ================================================================
        location /api/user/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            # Proxy tới FastAPI User
            proxy_pass http://127.0.0.1:8001/api/v1/auth/;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        location /api/user/scan/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://127.0.0.1:8001/api/v1/scan/;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            
            # Scan có thể lâu
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        location /api/user/history/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://127.0.0.1:8001/api/v1/history/;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        location /api/user/profile/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://127.0.0.1:8001/api/v1/user/;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # ================================================================
        # ROUTE 4: Honeypot + Frontend (DEFAULT ROUTE)
        # ================================================================
        # URL: https://domain.com/* (tất cả còn lại)
        # Backend: FastAPI Honeypot (custom-webserver) port 8443
        # Logic: Serve Vue.js + Log honeypot activities
        # ================================================================
        # LƯU Ý: Location này phải ở CUỐI CÙNG (default catch-all)
        # ================================================================
        location / {
            limit_req zone=general burst=20 nodelay;
            
            # Proxy tới Honeypot (FastAPI Custom Webserver)
            proxy_pass http://127.0.0.1:8443;
            proxy_http_version 1.1;
            
            # Headers quan trọng (honeypot cần IP thật)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header Referer $http_referer;
            proxy_set_header Cookie $http_cookie;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Disable buffering cho real-time
            proxy_buffering off;
        }
        
        # ================================================================
        # Health Check (Public)
        # ================================================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # ================================================================
        # Nginx Status (Internal)
        # ================================================================
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}
